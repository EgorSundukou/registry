{"ast":null,"code":"var _jsxFileName = \"/Users/goygova/Workspace/java_project/source/client/registry-client/src/components/directory/Person.js\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport personStyles from '../../styles/Person.styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { DynamicTable } from '../DynamicTable';\n\nclass Person extends React.Component {\n  render() {\n    const loadingIndicator = React.createElement(\"div\", {\n      className: this.props.classes.loadingIndicatorContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: this.props.classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"), React.createElement(\"div\", {\n      className: this.props.classes.tableContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, this.props.directory.peopleLoading ? loadingIndicator : React.createElement(DynamicTable, {\n      columns: this.props.directory.columns,\n      rows: this.props.directory.people,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/directory/person\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    })));\n  }\n\n  componentWillMount() {\n    this.props.setPeopleLoading(true);\n    this.fetchPeople().then(response => {\n      this.props.setPeopleLoading(false);\n      this.props.setColumns(response.data.HEAD);\n      this.props.setPeople(response.data.DATA);\n    });\n  }\n\n  fetchPeople() {\n    return axios({\n      method: 'get',\n      url: '/api/directory/person',\n      responseType: 'json'\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    directory: state.directoryReducer\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setPeople: people => {\n      dispatch({\n        type: 'SET_PEOPLE',\n        payload: people\n      });\n    },\n    setPeopleLoading: isLoading => {\n      dispatch({\n        type: 'SET_PEOPLE_LOADING',\n        payload: isLoading\n      });\n    },\n    setColumns: columns => {\n      dispatch({\n        type: 'SET_COLUMNS',\n        payload: columns\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(personStyles)(Person));","map":{"version":3,"sources":["/Users/goygova/Workspace/java_project/source/client/registry-client/src/components/directory/Person.js"],"names":["React","Route","axios","connect","CircularProgress","personStyles","withStyles","Button","DynamicTable","Person","Component","render","loadingIndicator","props","classes","loadingIndicatorContainer","button","tableContainer","directory","peopleLoading","columns","people","componentWillMount","setPeopleLoading","fetchPeople","then","response","setColumns","data","HEAD","setPeople","DATA","method","url","responseType","mapStateToProps","state","directoryReducer","mapDispatchToProps","dispatch","type","payload","isLoading"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport axios  from 'axios';\nimport {connect} from 'react-redux';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport personStyles from '../../styles/Person.styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { DynamicTable } from '../DynamicTable';\n\n\nclass Person extends React.Component{\n    render(){\n    const loadingIndicator = (<div className={this.props.classes.loadingIndicatorContainer}>\n                                <CircularProgress/>\n                              </div>);\n        return (\n            <div>\n              <Button variant=\"contained\" color=\"primary\" className={this.props.classes.button}>\n                Добавить\n              </Button>\n              <div className= {this.props.classes.tableContainer}>\n                {this.props.directory.peopleLoading ? loadingIndicator : <DynamicTable columns={this.props.directory.columns} rows={this.props.directory.people}/>}\n                  <Route path=\"/directory/person\"/>\n              </div>\n            </div>\n        )\n    }\n\n    componentWillMount(){\n        this.props.setPeopleLoading(true);\n        this.fetchPeople().then((response) => {\n            this.props.setPeopleLoading(false);\n            this.props.setColumns(response.data.HEAD);\n            this.props.setPeople(response.data.DATA);\n        });\n    }\n\n    fetchPeople() {\n        return axios({\n            method: 'get',\n            url: '/api/directory/person',\n            responseType: 'json'\n          });\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n      directory: state.directoryReducer\n    }\n  }\n  const mapDispatchToProps = (dispatch) => {\n    return {\n      setPeople: (people) => {\n        dispatch({\n          type: 'SET_PEOPLE',\n          payload: people,\n        })\n      },\n      setPeopleLoading: (isLoading) => {\n          dispatch({\n            type: 'SET_PEOPLE_LOADING',\n            payload: isLoading\n          })\n      },\n      setColumns: (columns) => {\n        dispatch({\n          type: 'SET_COLUMNS',\n          payload: columns\n        })\n      }\n    }\n  }\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withStyles(personStyles)(Person));"]},"metadata":{},"sourceType":"module"}