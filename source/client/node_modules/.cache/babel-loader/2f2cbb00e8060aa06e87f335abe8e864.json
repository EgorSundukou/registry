{"ast":null,"code":"var _jsxFileName = \"/Users/goygova/Workspace/java_project/source/client/registry-client/src/components/directory/Person.jsx\";\nimport React from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport personStyles from '../../styles/Person.styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport DynamicTable from '../DynamicTable';\nimport FormDialog from '../shared/FormDialog';\n\nclass Person extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    };\n  }\n\n  render() {\n    const loadingIndicator = React.createElement(\"div\", {\n      className: this.props.classes.loadingIndicatorContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(FormDialog, {\n      open: this.state.open,\n      onDismiss: () => this.toggleDialog(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: this.props.classes.button,\n      onClick: () => this.toggleDialog(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      className: this.props.classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"), React.createElement(\"div\", {\n      className: this.props.classes.tableContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, this.props.directory.peopleLoading ? loadingIndicator : React.createElement(DynamicTable, {\n      columns: this.props.directory.columns,\n      rows: this.props.directory.people,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })));\n  }\n\n  toggleDialog() {\n    this.setState(state => ({\n      open: !state.open\n    }));\n  }\n\n  componentWillMount() {\n    this.props.setPeopleLoading(true);\n    this.fetchPeople().then(response => {\n      this.props.setPeopleLoading(false);\n      this.props.setColumns(response.data.HEAD);\n      this.props.setPeople(response.data.DATA);\n    });\n  }\n\n  fetchPeople() {\n    return axios({\n      method: 'get',\n      url: '/api/directory/person',\n      responseType: 'json'\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    directory: state.directoryReducer\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setPeople: people => {\n      dispatch({\n        type: 'SET_PEOPLE',\n        payload: people\n      });\n    },\n    setPeopleLoading: isLoading => {\n      dispatch({\n        type: 'SET_PEOPLE_LOADING',\n        payload: isLoading\n      });\n    },\n    setColumns: columns => {\n      dispatch({\n        type: 'SET_COLUMNS',\n        payload: columns\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(personStyles)(Person));","map":{"version":3,"sources":["/Users/goygova/Workspace/java_project/source/client/registry-client/src/components/directory/Person.jsx"],"names":["React","axios","connect","CircularProgress","personStyles","withStyles","Button","DynamicTable","FormDialog","Person","Component","constructor","props","state","open","render","loadingIndicator","classes","loadingIndicatorContainer","toggleDialog","button","tableContainer","directory","peopleLoading","columns","people","setState","componentWillMount","setPeopleLoading","fetchPeople","then","response","setColumns","data","HEAD","setPeople","DATA","method","url","responseType","mapStateToProps","directoryReducer","mapDispatchToProps","dispatch","type","payload","isLoading"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport personStyles from '../../styles/Person.styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport DynamicTable from '../DynamicTable';\nimport FormDialog from '../shared/FormDialog';\n\nclass Person extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { open: false };\n\t}\n\trender() {\n\t\tconst loadingIndicator = (\n\t\t\t<div className={this.props.classes.loadingIndicatorContainer}>\n\t\t\t\t<CircularProgress />\n\t\t\t</div>\n\t\t);\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<FormDialog open={this.state.open} onDismiss={() => this.toggleDialog()} />\n\t\t\t\t<Button variant='contained' color='primary' className={this.props.classes.button} onClick={() => this.toggleDialog()}>\n\t\t\t\t\tДобавить\n\t\t\t\t</Button>\n\n\t\t\t\t<Button variant='contained' color='secondary' className={this.props.classes.button}>\n\t\t\t\t\tУдалить\n\t\t\t\t</Button>\n\t\t\t\t<div className={this.props.classes.tableContainer}>\n\t\t\t\t\t{this.props.directory.peopleLoading ? (\n\t\t\t\t\t\tloadingIndicator\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<DynamicTable columns={this.props.directory.columns} rows={this.props.directory.people} />\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\ttoggleDialog() {\n\t\tthis.setState(state => ({\n\t\t\topen: !state.open\n\t\t}));\n\t}\n\n\tcomponentWillMount() {\n\t\tthis.props.setPeopleLoading(true);\n\t\tthis.fetchPeople().then(response => {\n\t\t\tthis.props.setPeopleLoading(false);\n\t\t\tthis.props.setColumns(response.data.HEAD);\n\t\t\tthis.props.setPeople(response.data.DATA);\n\t\t});\n\t}\n\n\tfetchPeople() {\n\t\treturn axios({\n\t\t\tmethod: 'get',\n\t\t\turl: '/api/directory/person',\n\t\t\tresponseType: 'json'\n\t\t});\n\t}\n}\nconst mapStateToProps = state => {\n\treturn {\n\t\tdirectory: state.directoryReducer\n\t};\n};\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tsetPeople: people => {\n\t\t\tdispatch({\n\t\t\t\ttype: 'SET_PEOPLE',\n\t\t\t\tpayload: people\n\t\t\t});\n\t\t},\n\t\tsetPeopleLoading: isLoading => {\n\t\t\tdispatch({\n\t\t\t\ttype: 'SET_PEOPLE_LOADING',\n\t\t\t\tpayload: isLoading\n\t\t\t});\n\t\t},\n\t\tsetColumns: columns => {\n\t\t\tdispatch({\n\t\t\t\ttype: 'SET_COLUMNS',\n\t\t\t\tpayload: columns\n\t\t\t});\n\t\t}\n\t};\n};\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(withStyles(personStyles)(Person));\n"]},"metadata":{},"sourceType":"module"}