{"ast":null,"code":"import _defineProperty from \"/Users/goygova/Workspace/java_project/source/client/registry-client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst initialAppState = {\n  leftMenuOpen: false,\n  leftMenuItems: []\n};\nexport default ((state = initialAppState, action) => {\n  switch (action.type) {\n    case 'TOGGLE_LEFT_MENU':\n      state = _objectSpread({}, state, {\n        leftMenuOpen: !state.leftMenuOpen\n      });\n      break;\n\n    case 'TOGGLE_LEFT_MENU_ITEM':\n      state = _objectSpread({}, state, {\n        leftMenuItems: toggleLeftMenuItemByName(action.payload, state.leftMenuItems)\n      });\n      break;\n\n    case 'SET_MENU':\n      state = _objectSpread({}, state, {\n        leftMenuItems: action.payload\n      });\n      break;\n\n    default:\n      return state;\n  }\n\n  return state;\n});\n/**\n * Toggles left menu item by its name\n * @param {*} name\n * @param {*} state\n * @returns {*} leftMenuItems with toggled isExpanded propertie for matched item by name\n */\n//TODO: make this shit work!!!(make this function recursive)\n\nfunction toggleLeftMenuItemByName(name, leftMenuItem, parent) {\n  return leftMenuItems.map(leftMenuItem => {\n    if (leftMenuItem.name === name) {\n      if (parent) {\n        parent.isExpanded = true;\n      }\n\n      return _objectSpread({}, leftMenuItem, {\n        isExpanded: true\n      });\n    } else if (leftMenuItem.items) {\n      leftMenuItem.items = [...toggleLeftMenuItemByName(name, leftMenuItem.items, leftMenuItem)];\n      return _objectSpread({}, leftMenuItem, {\n        isExpanded: true\n      });\n    }\n\n    return _objectSpread({}, leftMenuItem, {\n      isExpanded: false\n    });\n  });\n}","map":{"version":3,"sources":["/Users/goygova/Workspace/java_project/source/client/registry-client/src/reducers/appReducer.js"],"names":["initialAppState","leftMenuOpen","leftMenuItems","state","action","type","toggleLeftMenuItemByName","payload","name","leftMenuItem","parent","map","isExpanded","items"],"mappings":";;;;;;AAAA,MAAMA,eAAe,GAAG;AACvBC,EAAAA,YAAY,EAAE,KADS;AAEvBC,EAAAA,aAAa,EAAE;AAFQ,CAAxB;AAKA,gBAAe,CAACC,KAAK,GAAGH,eAAT,EAA0BI,MAA1B,KAAqC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,kBAAL;AACCF,MAAAA,KAAK,qBACDA,KADC;AAEJF,QAAAA,YAAY,EAAE,CAACE,KAAK,CAACF;AAFjB,QAAL;AAIA;;AACD,SAAK,uBAAL;AACCE,MAAAA,KAAK,qBACDA,KADC;AAEJD,QAAAA,aAAa,EAAEI,wBAAwB,CAACF,MAAM,CAACG,OAAR,EAAiBJ,KAAK,CAACD,aAAvB;AAFnC,QAAL;AAIA;;AACD,SAAK,UAAL;AACCC,MAAAA,KAAK,qBACDA,KADC;AAEJD,QAAAA,aAAa,EAAEE,MAAM,CAACG;AAFlB,QAAL;AAIA;;AACD;AACC,aAAOJ,KAAP;AApBF;;AAsBA,SAAOA,KAAP;AACA,CAxBD;AA0BA;;;;;;AAOA;;AACA,SAASG,wBAAT,CAAkCE,IAAlC,EAAwCC,YAAxC,EAAsDC,MAAtD,EAA8D;AAC7D,SAAOR,aAAa,CAACS,GAAd,CAAkBF,YAAY,IAAI;AACxC,QAAIA,YAAY,CAACD,IAAb,KAAsBA,IAA1B,EAAgC;AAC/B,UAAIE,MAAJ,EAAY;AACXA,QAAAA,MAAM,CAACE,UAAP,GAAoB,IAApB;AACA;;AACD,+BACIH,YADJ;AAECG,QAAAA,UAAU,EAAE;AAFb;AAIA,KARD,MAQO,IAAIH,YAAY,CAACI,KAAjB,EAAwB;AAC9BJ,MAAAA,YAAY,CAACI,KAAb,GAAqB,CAAC,GAAGP,wBAAwB,CAACE,IAAD,EAAOC,YAAY,CAACI,KAApB,EAA2BJ,YAA3B,CAA5B,CAArB;AACA,+BACIA,YADJ;AAECG,QAAAA,UAAU,EAAE;AAFb;AAIA;;AACD,6BACIH,YADJ;AAECG,MAAAA,UAAU,EAAE;AAFb;AAIA,GApBM,CAAP;AAqBA","sourcesContent":["const initialAppState = {\n\tleftMenuOpen: false,\n\tleftMenuItems: []\n};\n\nexport default (state = initialAppState, action) => {\n\tswitch (action.type) {\n\t\tcase 'TOGGLE_LEFT_MENU':\n\t\t\tstate = {\n\t\t\t\t...state,\n\t\t\t\tleftMenuOpen: !state.leftMenuOpen\n\t\t\t};\n\t\t\tbreak;\n\t\tcase 'TOGGLE_LEFT_MENU_ITEM':\n\t\t\tstate = {\n\t\t\t\t...state,\n\t\t\t\tleftMenuItems: toggleLeftMenuItemByName(action.payload, state.leftMenuItems)\n\t\t\t};\n\t\t\tbreak;\n\t\tcase 'SET_MENU':\n\t\t\tstate = {\n\t\t\t\t...state,\n\t\t\t\tleftMenuItems: action.payload\n\t\t\t};\n\t\t\tbreak;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n\treturn state;\n};\n\n/**\n * Toggles left menu item by its name\n * @param {*} name\n * @param {*} state\n * @returns {*} leftMenuItems with toggled isExpanded propertie for matched item by name\n */\n\n//TODO: make this shit work!!!(make this function recursive)\nfunction toggleLeftMenuItemByName(name, leftMenuItem, parent) {\n\treturn leftMenuItems.map(leftMenuItem => {\n\t\tif (leftMenuItem.name === name) {\n\t\t\tif (parent) {\n\t\t\t\tparent.isExpanded = true;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...leftMenuItem,\n\t\t\t\tisExpanded: true\n\t\t\t};\n\t\t} else if (leftMenuItem.items) {\n\t\t\tleftMenuItem.items = [...toggleLeftMenuItemByName(name, leftMenuItem.items, leftMenuItem)];\n\t\t\treturn {\n\t\t\t\t...leftMenuItem,\n\t\t\t\tisExpanded: true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t...leftMenuItem,\n\t\t\tisExpanded: false\n\t\t};\n\t});\n}\n"]},"metadata":{},"sourceType":"module"}