{"ast":null,"code":"var _jsxFileName = \"/Users/goygova/Workspace/java_project/source/client/registry-client/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport AppBar from '@material-ui/core/AppBar';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport appStyles from './styles/App.styles';\nimport { Route, Link } from 'react-router-dom';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport axios from 'axios';\nimport Person from './components/directory/Person';\n\nclass App extends React.Component {\n  componentWillMount() {\n    this.fetchMenu().then(response => {\n      this.props.setMenu(response.data);\n    });\n  }\n\n  fetchMenu() {\n    return axios({\n      method: 'get',\n      url: '/api/menu',\n      responseType: 'json'\n    });\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const drawer = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.toolbar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.props.app.leftMenuItems.map((leftMenuItem, i) => React.createElement(\"div\", {\n      key: leftMenuItem.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      button: true,\n      key: leftMenuItem.title,\n      onClick: () => {\n        this.props.toggleLeftMenuItem(i);\n      },\n      selected: this.props.location.pathname === leftMenuItem.link,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(ListItemText, {\n      primary: leftMenuItem.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), leftMenuItem.isExpanded ? React.createElement(ExpandLess, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }) : React.createElement(ExpandMore, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })), React.createElement(Collapse, {\n      in: leftMenuItem.isExpanded,\n      timeout: \"auto\",\n      unmountOnExit: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, leftMenuItem.items.map(nestedItem => {\n      let path = \"/\".concat(leftMenuItem.name, \"/\").concat(nestedItem.name);\n      return React.createElement(Link, {\n        to: path,\n        className: classes.link,\n        key: nestedItem.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(ListItem, {\n        button: true,\n        className: classes.nested,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(ListItemText, {\n        primary: nestedItem.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      })));\n    })))))));\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(AppBar, {\n      position: \"fixed\",\n      className: classes.appBar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      onClick: this.props.toggleLeftMenu,\n      className: classes.menuButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(MenuIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      variant: \"h6\",\n      noWrap: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Registry Client\"))), React.createElement(\"nav\", {\n      className: classes.drawer,\n      \"aria-label\": \"Mailbox folders\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Hidden, {\n      smUp: true,\n      implementation: \"css\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Drawer, {\n      variant: \"temporary\" // anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n      ,\n      open: this.props.app.leftMenuOpen,\n      onClick: this.props.toggleLeftMenu,\n      classes: {\n        paper: classes.drawerPaper\n      },\n      ModalProps: {\n        keepMounted: true // Better open performance on mobile.\n\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, drawer)), React.createElement(Hidden, {\n      xsDown: true,\n      implementation: \"css\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Drawer, {\n      classes: {\n        paper: classes.drawerPaper\n      },\n      variant: \"permanent\",\n      open: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, drawer))), React.createElement(\"main\", {\n      className: classes.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.toolbar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/directory/person\",\n      component: Person,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    app: state.appReducer\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setName: name => {\n      dispatch({\n        type: 'SET_NAME',\n        payload: name\n      });\n    },\n    toggleLeftMenu: () => {\n      dispatch({\n        type: 'TOGGLE_LEFT_MENU'\n      });\n    },\n    toggleLeftMenuItem: index => {\n      dispatch({\n        type: 'TOGGLE_LEFT_MENU_ITEM',\n        payload: index\n      });\n    },\n    setMenu: menu => {\n      dispatch({\n        type: 'SET_MENU',\n        payload: menu\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(appStyles)(App));","map":{"version":3,"sources":["/Users/goygova/Workspace/java_project/source/client/registry-client/src/App.js"],"names":["React","connect","AppBar","Divider","Drawer","Hidden","IconButton","List","ListItem","ListItemText","MenuIcon","Toolbar","Typography","withStyles","appStyles","Route","Link","Collapse","ExpandLess","ExpandMore","axios","Person","App","Component","componentWillMount","fetchMenu","then","response","props","setMenu","data","method","url","responseType","render","classes","drawer","toolbar","app","leftMenuItems","map","leftMenuItem","i","title","toggleLeftMenuItem","location","pathname","link","isExpanded","items","nestedItem","path","name","nested","root","appBar","toggleLeftMenu","menuButton","leftMenuOpen","paper","drawerPaper","keepMounted","content","mapStateToProps","state","appReducer","mapDispatchToProps","dispatch","setName","type","payload","index","menu"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport {connect} from 'react-redux';\nimport AppBar from '@material-ui/core/AppBar';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport appStyles from './styles/App.styles';\nimport { Route, Link } from 'react-router-dom';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport axios  from 'axios';\nimport Person from './components/directory/Person';\n\nclass App extends React.Component {\n  componentWillMount(){\n    this.fetchMenu().then((response) => {\n      this.props.setMenu(response.data)\n    });\n  }\n  fetchMenu(){\n    return axios({\n      method: 'get',\n      url: '/api/menu',\n      responseType: 'json'\n    });\n  }\n  render(){\n\n    const { classes } = this.props;\n\n    const drawer = (\n      <div>\n        <div className={classes.toolbar} />\n        <Divider />\n        <List>\n            {this.props.app.leftMenuItems.map((leftMenuItem, i) => \n            <div key={leftMenuItem.title}>\n                <ListItem button key={leftMenuItem.title}\n                  onClick={() => { this.props.toggleLeftMenuItem(i) }}\n                  selected={this.props.location.pathname === leftMenuItem.link}>\n                    {/* TODO: Ask about icons */}\n                  {/* <ListItemIcon>{leftMenuItem.icon}</ListItemIcon> */}\n                  <ListItemText primary={leftMenuItem.title} />\n                  {leftMenuItem.isExpanded ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={leftMenuItem.isExpanded} timeout=\"auto\" unmountOnExit>\n                  <List>\n                    {leftMenuItem.items.map(nestedItem => {\n                      let path = `/${leftMenuItem.name}/${nestedItem.name}`;\n                      return (\n                      <Link to={path} className={classes.link} key={nestedItem.title}>\n                        <ListItem button className={classes.nested}>\n                          <ListItemText primary={nestedItem.title}/>\n                        </ListItem>\n                      </Link>)\n                    })}\n                  </List>\n                </Collapse>\n            </div>\n          )}\n        </List>\n      </div>\n    );\n    return (\n          <div className={classes.root}>\n          <AppBar position=\"fixed\" className={classes.appBar}>\n            <Toolbar>\n              <IconButton\n                onClick={this.props.toggleLeftMenu}\n                className={classes.menuButton}>\n              <MenuIcon />\n              </IconButton>\n              <Typography variant=\"h6\" noWrap>\n                Registry Client\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          <nav className={classes.drawer} aria-label=\"Mailbox folders\">\n            {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n            <Hidden smUp implementation=\"css\">\n              <Drawer\n                variant=\"temporary\"\n                // anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                open={this.props.app.leftMenuOpen}\n                onClick={this.props.toggleLeftMenu}\n                classes={{\n                  paper: classes.drawerPaper,\n                }}\n                ModalProps={{\n                  keepMounted: true, // Better open performance on mobile.\n                }}\n              >\n                {drawer}\n              </Drawer>\n            </Hidden>\n            <Hidden xsDown implementation=\"css\">\n              <Drawer\n                classes={{\n                  paper: classes.drawerPaper,\n                }}\n                variant=\"permanent\"\n                open\n              >\n                {drawer}\n              </Drawer>\n            </Hidden>\n          </nav>\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <Route path=\"/directory/person\" component={Person}/>\n          </main>\n        </div>\n    );\n  } \n}\n\nconst mapStateToProps = (state) => {\n  return {\n    app: state.appReducer\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setName: (name) => {\n      dispatch({\n        type: 'SET_NAME',\n        payload: name,\n      })\n    },\n    toggleLeftMenu: () => {\n      dispatch({\n        type: 'TOGGLE_LEFT_MENU',\n      })\n    },\n    toggleLeftMenuItem: (index) => {\n      dispatch({\n        type: 'TOGGLE_LEFT_MENU_ITEM',\n        payload: index\n      })\n    },\n    setMenu:(menu) => {\n      dispatch({\n        type: 'SET_MENU',\n        payload: menu,\n      })\n    }\n  }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(withStyles(appStyles)(App));"]},"metadata":{},"sourceType":"module"}